package com.datatype.Literal.string.OCAJP_String;

public class Demo {


	public static void main(String[] args) {

//1---		---MUTIBILITY-------
		String s = new String("Kasmir");
//		automatically applicable for garbage collection
//		 new object("KasmirHeaven") will be created so immutable(unchangeable)
		s.concat("Heaven");
		System.out.println(s);

//1---		---MUTIBILITY-------
		StringBuffer sb = new StringBuffer("Kasmir");
//		operate on a same object--no new object will be created--so mutable(changeable)
		sb.append("Heaven");
		System.out.println(sb);
		
//		equals() and ==  
		String s1 = new String("Anada");
		String s2 = new String("Anada");
		System.out.println(s1 == s2);//false
		System.out.println(s1.equals(s2));//true
		
//		equals() and ==  
		StringBuffer sb1 = new StringBuffer("Anada");
		StringBuffer sb2 = new StringBuffer("Anada");
		System.out.println(sb1 == sb2);//false
		System.out.println(sb1.equals(sb2));//false
		
//		final and immutability
		StringBuffer sb3 = new StringBuffer("You can");
		sb3.append(" Win");
		System.out.println(sb3);
		
	}
}
