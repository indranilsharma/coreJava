package com.Thread.AdvancedMultithreding.excutaorFramework;

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

class LoopTask implements Runnable {

	String loopTaskName;

	public LoopTask(String loopTaskName) {
//		super();
		this.loopTaskName = loopTaskName;
	}

	@Override
	public void run() {
		System.out.println("Starting " + loopTaskName);
		for (int j = 0; j < 10; j++) {
			System.out.println("Executing " + loopTaskName + " with " + Thread.currentThread().getName() + " ====" + j);
		}
		System.out.println("Ending " + loopTaskName);
	}
}

public class ExcutaorService_SingleThreadExecutor {

	public static void main(String[] args) {

		ExecutorService service = Executors.newSingleThreadExecutor();

		for (int i = 0; i < 3; i++) {
			LoopTask obj = new LoopTask("LoopTask " + i);
			service.submit(obj);
		}
		service.shutdown();
	}
}
