package com.CollectionAPI.CollectionFramework.set.TreeSet;

import java.util.Comparator;
import java.util.TreeSet;

class Employee {
	int empId;
	String name;

	public Employee(int empId, String name) {
		this.empId = empId;
		this.name = name;
	}

	@Override
	public String toString() {
		return "Employee [empId=" + empId + ", name=" + name + "]";
	}

	public int compareTo(Object obj1) {
		int empId1 = this.empId;
		Employee e = (Employee) obj1;
		int empId2 = e.empId;
		if (empId1 < empId2) {
			return 1;
		} else if (empId1 > empId2) {
			return -1;
		} else
			return 0;
	}
}

class MyComparator implements Comparator<Object> {

	@Override
	public int compare(Object o1, Object o2) {
		Employee e1 = (Employee) o1;
		Employee e2 = (Employee) o2;

		return -e1.compareTo(e2);
	}

}

public class Comparable_Comparator_TreeSet {

	public static void main(String[] args) {

		TreeSet<Object> t1 = new TreeSet<>();

		Employee e1 = new Employee(100, "Jackson");
		Employee e2 = new Employee(101, "Amaple");
		Employee e3 = new Employee(102, "Jord");
		Employee e4 = new Employee(103, "Bob");

		t1.add(e1);
		t1.add(e2);
		t1.add(e3);
		t1.add(e4);

		TreeSet<Object> t2 = new TreeSet<>(new MyComparator());
		
		t1.add(e1);
		t1.add(e2);
		t1.add(e3);
		t1.add(e4);
	}

}
