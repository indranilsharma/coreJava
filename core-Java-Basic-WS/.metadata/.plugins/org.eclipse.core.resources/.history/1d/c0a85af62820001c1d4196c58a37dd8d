package com.Thread.AdvancedMultithreding.excutaorFramework;

import java.util.concurrent.ExecutionException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;

class MyFutureTask implements Runnable {

	@Override
	public void run() {
		System.out.println("Future thread");
	}
}

public class ExecutorService_Interface_Future {

	public static void main(String[] args) {
		ExecutorService service = Executors.newFixedThreadPool(4);
		Future<String> future = service.submit(()->
		{
			new MyFutureTask();
			return "Forget the PAST!";
		});
		System.out.println("Hi");

		if (future.isDone() && !future.isCancelled()) {
//		    try {
//		       String str = future.get();
//		    } catch (InterruptedException | ExecutionException e) {
//		        e.printStackTrace();
//		    }
			System.out.println(future);
		}
	}

}
