package com.dataStucture.searchingalgorithms;

public class BinarySearch {

	public int binarySearchFollowRecursiveMethod(int array[], int elementTobeSearch, int l, int r) {

		if (r >= l) {

			int mid = l + (r - l) / 2;

			if (array[mid] == elementTobeSearch) {
				return mid;
			}

			if (array[mid] < elementTobeSearch) {
				return binarySearchFollowRecursiveMethod(array, elementTobeSearch, l+mid, r);
			}

			if (array[mid] > elementTobeSearch) {
				return binarySearchFollowRecursiveMethod(array, elementTobeSearch,l, r-mid);
			}

          }
		return -1;
	}

	public void binarySearchFollowMasterMethod() {
     
	}

	public static void main(String[] args) {
		int[] array = { 1, 5, 6, 8, 10, 15, 16, 17 }; // array should be shorted
														// manner
		int elementTobeSearch = 15;
		//int mid = array.length / 2;
		int l = array[0];
		int r = array.length - 1;
		
		BinarySearch binarySearch = new BinarySearch();
		binarySearch.binarySearchFollowRecursiveMethod(array, elementTobeSearch, l, r);
	}
}
